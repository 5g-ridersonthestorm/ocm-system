@model IEnumerable<OCM.API.Common.Model.ChargePoint>

<div class="results-list">
    @foreach (var item in Model.Take(500))
    {
        <div class="result row">
            <a href="@Url.Action("Details","POI",new{ID=item.ID})">
                <h3>
                    @Html.DisplayFor(m => item.AddressInfo.Title)
                    <div class="pull-right">
                        @if (item.UserComments != null)
                        {
                            <i class="fa fa-comment-o"></i> @item.UserComments.Count

                        }
                        &nbsp;
                        @if (item.MediaItems != null)
                        {
                            <i class="fa fa-camera"></i> @item.MediaItems.Count
                        }
                    </div>

                </h3>
            </a>
            <div class="col-sm-6">
                <div class="text-info">
                    <p>@Html.DisplayFor(m => item.SubmissionStatus.Title)</p>
                    <p>@Html.DisplayFor(m => item.GeneralComments)</p>
                </div>
                @Html.DisplayFor(m => item.AddressInfo)

                @Html.ActionLink("View", "Details", new { id = item.ID })
            </div>
            <div class="col-sm-6">
                @if (item.AddressInfo.Distance != null)
                {
                    @Html.Raw(Math.Round(item.AddressInfo.Distance.Value, 2) + " " + item.AddressInfo.DistanceUnit)<br />
                }
                @if (item.UsageType != null)
                {
                    @item.UsageType.Title
                    <br />
                }
                @if (item.StatusType != null)
                {
                    if (item.StatusType.IsOperational != true)
                    {
                        <span class="label label-warning">
                            @item.StatusType.Title
                        </span>
                    }
                    else
                    {
                        <span>@item.StatusType.Title</span>
                    }
                }

                @if (item.Connections != null && item.Connections.Count > 0)
                {
                    var maxLevel = item.Connections[0];
                    foreach (var c in item.Connections)
                    {
                        if (maxLevel.Level == null && c.Level != null)
                        {
                            maxLevel = c;
                        }
                        else
                        {
                            if (c.Level != null)
                            {
                                if (maxLevel.Level.ID > maxLevel.Level.ID)
                                {
                                    maxLevel = c;
                                }
                            }
                        }
                    }

                    if (maxLevel.Level != null)
                    {
                        var connectionType = "";
                        if (maxLevel.ConnectionType != null) { connectionType = maxLevel.ConnectionType.Title; }
                        <br /><span class="fa fa-bolt" ></span> @maxLevel.Level.Title
                        <br /><span class="fa fa-link"></span> @connectionType
                    }
                }

            </div>

        </div>
    }
</div>
